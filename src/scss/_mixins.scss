@use './variables.scss' as var;

@mixin child_reset {
	> * {
		&:first-child {
			margin-top: 0;
		}

		&:last-child {
			margin-bottom: 0;
		}
	}
}

@mixin feature_background {
	padding: 20px 0 50px;

	&:before {
		content: '';
		position: absolute;
		z-index: -1;
		top: 0;
		bottom: 0;
		left: 50%;
		width: 100vw;
		transform: translateX(-50%);
		background: var.$grey_light;
	}
}

@mixin gutenberg_backgrounds {
	@each $color, $hex in var.$coloursList {
		&.has-#{$color}-background-color {
			--background_colour: #{$hex};
		}
	}
}

@mixin gutenberg_text_colours {
	@each $color, $hex in var.$coloursList {
		&.has-#{$color}-color {
			--text_colour: #{$hex};
		}
	}
}

@mixin animate_border($initial_colour, $final_colour, $border_width: 2px) {
	border: none;
	box-shadow: inset 0 0 0 $border_width $initial_colour;

	&:before,
	&:after {
		content: '';
		position: absolute;
		width: 0;
		height: 0;
		transition: none;
		border: $border_width solid transparent;
		border-radius: inherit;
	}

	&:before {
		top: 0;
		left: 0;
	}

	&:after {
		right: 0;
		bottom: 0;
	}

	&:hover {
		&:before,
		&:after {
			width: 100%;
			height: 100%;
		}

		&:before {
			transition:
				width 0.25s ease-out,
				height 0.25s ease-out 0.25s;
			border-top-color: $final_colour;
			border-right-color: $final_colour;
		}

		&:after {
			transition:
				border-color 0s ease-out 0.5s,
				width 0.25s ease-out 0.5s,
				height 0.25s ease-out 0.75s;
			border-bottom-color: $final_colour;
			border-left-color: $final_colour;
		}
	}
}
